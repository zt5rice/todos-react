{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","index","completeTodo","removeTodo","class","style","textDecoration","isCompleted","text","onClick","TodoForm","addTodo","useState","value","setValue","onSubmit","e","preventDefault","type","placeholder","onChange","target","App","todos","setTodos","newTodos","splice","className","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAGA,SAASA,EAAT,GAA0D,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,WAEzC,OAAO,sBAAKC,MAAM,YAAYC,MAAO,CAAEC,eAAgBN,EAAKO,YAAc,eAAiB,IAApF,UACJP,EAAKQ,KACN,gCACE,wBAAQC,QAAS,WAAQP,EAAaD,IAAtC,qBACA,wBAAQQ,QAAS,WAAQN,EAAWF,IAApC,uBAMN,SAASS,EAAT,GAAgC,IAAZC,EAAW,EAAXA,QAClB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAOA,OAAO,sBAAMC,SANQ,SAAAC,GACnBA,EAAEC,iBACGJ,IACLF,EAAQE,GACRC,EAAS,MAEJ,SACL,uBAAOI,KAAK,OAAOC,YAAY,eAAeN,MAAOA,EAAOO,SAAU,SAAAJ,GAAC,OAAIF,EAASE,EAAEK,OAAOR,YAwClFS,MApCf,WACE,MAA0BV,mBAAS,CACjC,CAAEJ,KAAM,QAASD,aAAa,GAC9B,CAAEC,KAAM,MAAOD,aAAa,KAF9B,mBAAOgB,EAAP,KAAcC,EAAd,KAQMtB,EAAe,SAAAD,GACnB,IAAMwB,EAAQ,YAAOF,GACrBE,EAASxB,GAAOM,aAAc,EAC9BiB,EAASC,IAELtB,EAAa,SAAAF,GACjB,IAAMwB,EAAQ,YAAOF,GACrBE,EAASC,OAAOzB,EAAO,GACvBuB,EAASC,IAGX,OACE,sBAAKE,UAAU,MAAf,UACE,4CACA,sBAAKvB,MAAM,YAAX,UAEImB,EAAMK,KAAI,SAAC5B,EAAMC,GACf,OAAO,cAACF,EAAD,CAAkBC,KAAMA,EAAMC,MAAOA,EAAOC,aAAcA,EAAcC,WAAYA,GAAzEF,MAGtB,cAACS,EAAD,CAAUC,QAxBA,SAAAH,GACd,IAAMiB,EAAQ,sBAAOF,GAAP,CAAc,CAAEf,UAC9BgB,EAASC,aCvBEI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.00b57f9b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.scss';\n\nfunction Todo({ todo, index, completeTodo, removeTodo }) {\n  //return <div>{todo.text}</div>\n  return <div class=\"todo-item\" style={{ textDecoration: todo.isCompleted ? 'line-through' : '' }}>\n    {todo.text}\n    <div>\n      <button onClick={() => { completeTodo(index) }}> Finish</button>\n      <button onClick={() => { removeTodo(index) }}> X </button>\n    </div>\n  </div>\n\n}\n\nfunction TodoForm({ addTodo }) {\n  const [value, setValue] = useState('')\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue('')\n  }\n  return <form onSubmit={handleSubmit}>\n    <input type=\"text\" placeholder=\"add todo ...\" value={value} onChange={e => setValue(e.target.value)} />\n  </form>\n}\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    { text: 'sleep', isCompleted: true },\n    { text: 'eat', isCompleted: false }\n  ])\n  const addTodo = text => {\n    const newTodos = [...todos, { text }]\n    setTodos(newTodos)\n  }\n  const completeTodo = index => {\n    const newTodos = [...todos]\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos)\n  }\n  const removeTodo = index => {\n    const newTodos = [...todos]\n    newTodos.splice(index, 1);\n    setTodos(newTodos)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>to-do-list</h1>\n      <div class=\"todo-list\">\n        {\n          todos.map((todo, index) => {\n            return <Todo key={index} todo={todo} index={index} completeTodo={completeTodo} removeTodo={removeTodo}></Todo>\n          })\n        }\n        <TodoForm addTodo={addTodo}></TodoForm>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}